@model LOGHouseSystem.ViewModels.ReceiptNote.SetPositionToItemsViewModel

@{
    ViewBag.Title = "Pedidos";
}

<link href="~/vendor/datatables/datatables.bootstrap4.css" rel="stylesheet" />

<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="pe-7s-cart icon-gradient bg-happy-itmeo">
                </i>
            </div>
            <div>
                <h3 class="text-center mb-3">Endereçamento de produtos</h3>
            </div>
        </div>
    </div>
</div>

<form asp-action="AddPositionProduct" asp-controller="ReceiptNote" method="post">
    <div class="row d-flex justify-content-end">
        <div class="col-md-4 ">
            <div class="input-group mb-3">
                <input type="hidden" name="ReceiptNoteID" value="@Model.ReceiptNoteID" />
                @await Component.InvokeAsync("PositionAndProduct")
                <input type="hidden" name="productIds" id="productIds" />
                <div class="input-group-append">
                    <button style="border-radius: 0px 10px 10px 0px" class="btn btn-primary" onclick="impressLabels()" type="button" id="button-addon">Endereçar produtos selecionados</button>
                    <button class="btn btn-primary hidden" type="submit" id="button-addon2">Endereçar produtos selecionados</button>
                </div>
            </div>
        </div>
    </div>
</form>

<form asp-controller="ReceiptNote" asp-action="AddPositionProduct" method="post">
    @Html.HiddenFor(model => model.ReceiptNoteID)

    <div class="col-lg-12 col-md-12 col-xs-12">
        <div class="main-card mb-3 card">
            <div class="card-body">
                <table id="datatable" class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            @{
                                var productSample = Model.Products.FirstOrDefault();
                            }
                            <th>
                                <input type="checkbox" id="selectAllCheckbox" />
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => productSample.Code)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => productSample.Description)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => productSample.Ean)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => productSample.Quantity)
                            </th>

                            <th>
                                Posição no Estoque
                            </th>



                        </tr>
                    </thead>

                    <tbody>
                        @if (Model != null && Model.Products.Any())
                        {
                            foreach (var item in Model.Products)
                            {
                                <tr>
                                    @Html.Hidden("productIds[]",$"{item.Id}")

                                    <td data-id="@item.Id">
                                        <input type="checkbox" class="itemCheckbox" data-id="@item.Id" />
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Code)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Ean)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" value="@item.Position" aria-describedby="basic-addon1" readonly>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>

                </table>

            </div>
        </div>
    </div>
    <div class="row d-flex justify-content-end ">
        
        @*<button class="btn btn-success sendBtn mt-2 col-md-3" type="submit">Salvar Posições</button>*@
        <a class="btn btn-primary mx-2 mt-2  col-md-3" onclick="finalizeReceiptNote(@Model.ReceiptNoteID)">Finalizar Recebimento</a>
        
    </div>
    
</form>

<form asp-controller="ReceiptNote" asp-action="FinalizeReceiptNote" method="post" style="visibility: hidden;">
    <input  name="id" id="noteIdToFinalize" />
    <button type="submit" id="formFinalize"></button>
</form>



@section Scripts {



    <script src="~/vendor/datatables/jquery.datatables.min.js"></script>
    <script src="~/vendor/datatables/datatables.bootstrap4.min.js"></script>

    <script>

        function impressLabels() {
            var selecteds = [];
            var checkboxes = document.querySelectorAll('.itemCheckbox:checked');

            checkboxes.forEach(function (checkbox) {
                var row = checkbox.closest('tr');
                var id = row.querySelector('td[data-id]').getAttribute('data-id');

                selecteds.push(id);
            });

            if (selecteds.length <= 0) {
                Swal.fire(
                    'Opss.',
                    'É necessário selecionar ao menos um pedido',
                    'warning'
                );
                return;
            }

            var idToPass = JSON.stringify(selecteds);

            $("#productIds").val(selecteds);

            $("#button-addon2").click();

        }


        $(document).ready(function () {
            $('#datatable').DataTable({
                "language": {
                    "sEmptyTable": "Nenhum registro encontrado",
                    "sInfo": "Mostrando _START_ de _END_ de um total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando 0 registros",
                    "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Mostrar _MENU_ resultados por página",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sSearch": "Pesquisar",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                }
            });
        });

        document.getElementById('selectAllCheckbox').addEventListener('change', function () {
            var checkboxes = document.querySelectorAll('.itemCheckbox');
            checkboxes.forEach(function (checkbox) {
                checkbox.checked = this.checked;
            }.bind(this));
        });

        function finalizeReceiptNote(id) {
            // Exibir um diálogo de confirmação SweetAlert
            Swal.fire({
                title: 'Você tem certeza que deseja finalizar esta nota de recebimento?',
                text: 'Caso finalize essa nota, não poderá mais setar posições no estoque aos produtos',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sim',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $("#noteIdToFinalize").val(id);
                    $("#formFinalize").click();
                }
            });
        }
    </script>
}
