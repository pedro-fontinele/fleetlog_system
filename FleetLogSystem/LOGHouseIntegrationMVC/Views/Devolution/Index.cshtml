@model PagedList.PagedList<LOGHouseSystem.ViewModels.DevolutionCreateAndUpdateViewModel>
@using LOGHouseSystem.Infra.Enums
@using LOGHouseSystem.ViewModels.Components;

@{
    ViewBag.Title = "Devoluções";
}

<link rel="stylesheet" href="/vendor/Tiny-Vertical-Timeline-Plugin-with-jQuery-jQuery-UI/src/jquery.timeline.css">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js"></script>
<link href="~/vendor/datatables/datatables.bootstrap4.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/site.css">
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">

<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="pe-7s-cart icon-gradient bg-happy-itmeo">
                </i>
            </div>
            <div>
                <h3 class="text-center mb-3">Lista de Devoluções</h3>
            </div>
        </div>
    </div>
</div>

<div>
    @await Component.InvokeAsync("FilterDevolution")
</div>

<div class="d-grid gap-2 d-flex justify-content-md-end mb-4 mt-2">
    <a class="btn btn-primary font-size-md" href="@Url.Action("Create", "Devolution")" role="button"><span class="fa-plus font-weight-bold font-size-lg mr-2"></span>Adicionar Devolução</a>
    <form asp-controller="ReceiptNote" asp-action="UploadXmlDevolution" method="post" enctype="multipart/form-data" id="uploadForm">
        <input class="btn btn-light" type="file" name="xmlFile" id="xmlFile" accept=".xml" required onchange="submitForm();" />
        <input class="hidden" name="devolutionId" id="devolutionId" />
        <button type="submit" class="hidden">Enviar XML</button>
    </form>
</div>

<div class="col-lg-12 col-md-12 col-xs-12">
    <form asp-action="Index" id="filterForm">
        <input type="hidden" id="hiddenInputToPagination" name="Page" value="@Model.PageNumber" />

    </form>

    <div class="main-card mb-3 card">
        <div class="card-body">
            @if (Model.Count > 0)
            {
                <table id="datatable" class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                <input type="checkbox" id="selectAllCheckbox" />
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Id)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model[0].ClientName)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model[0].SenderName)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model[0].InvoiceNumber)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model[0].EntryDate)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model[0].Status)
                            </th>

                            <th>
                                @Html.DisplayNameFor(model => model[0].Observation)
                            </th>

                            <th>#</th>


                        </tr>
                    </thead>

                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td data-id="@item.Id">
                                        <input type="checkbox" class="itemCheckbox"  />
                                    </td>
                                    <td>
                                        @(item.Id)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.ClientName)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.SenderName)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.InvoiceNumber)
                                    </td>

                                    <td>
                                        @item.EntryDate.ToString("dd/MM/yyyy")
                                    </td>

                                    <td>
                                        @switch (item.Status)
                                        {
                                            case DevolutionStatus.AguardandoResposta:
                                                <span class="badge badge-warning">@item.Status.GetDescription()</span>
                                                break;

                                            case DevolutionStatus.Finalizado:
                                                <span class="badge badge-primary">@item.Status.GetDescription()</span>
                                                break;

                                        }
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Observation)
                                    </td>

                                    <td class="d-flex">
                                        <a class="d-flex justify-content-center mx-2" title="Tirar Foto" asp-route-id="@item.Id" asp-controller="Devolution" asp-action="UploadImages"><i class="fa fa-fw fa-camera"></i></a>
                                        <a class="d-flex justify-content-center " role="button" title="Editar" asp-route-id="@item.Id" asp-controller="Devolution" asp-action="Create"><i class="fa fa-fw fa-pen"></i></a>
                                        <a class="d-flex justify-content-center mx-2" onclick="DeleteConfirmation(@item.Id)" style="cursor: pointer" title="Deletar"><i style="color: red" class="fa fa-fw fa-ban"></i></a>

                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                </table>

                <form asp-controller="Devolution" asp-action="Delete" method="post" style="visibility: hidden;">
                    <input name="devolutionId" id="idToDelete" />
                    <button type="submit" id="submitToDelete"></button>
                </form>

                <!--Pagination nav-->
                @if (Model.PageCount > 1)
                {
                    @Html.Partial("_PaginationListPager",new PaginationPagerModel{
            Page = Model.PageNumber,
            PageCount = Model.PageCount,
            InputIdForPage = "hiddenInputToPagination",
            FormToSubmit = "searchForm",
            ShowSearch = false
            })

                }
            }

        </div>
    </div>
</div>

@section Scripts {

    <script src="~/vendor/datatables/jquery.datatables.min.js"></script>
    <script src="~/vendor/datatables/datatables.bootstrap4.min.js"></script>
    <script src="~/lib/jQuery-Mask-Plugin-master/src/jquery.mask.js"></script>
    <script src="~/vendor/Tiny-Vertical-Timeline-Plugin-with-jQuery-jQuery-UI/src/jquery-ui.js"></script>
    <script src="~/vendor/Tiny-Vertical-Timeline-Plugin-with-jQuery-jQuery-UI/src/jquery.timeline.js"></script>
    <script src="~/js/moment.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#datatable').DataTable({
                "language": {
                    "sEmptyTable": "Nenhum registro encontrado",
                    "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                    "sInfoFiltered": "(Filtrados de _MAX_ registros no total)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Mostrar _MENU_ resultados por página",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sSearch": "Pesquisar",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    },
                },
                "paging": true,
                "info": false,
                "search": false,
                "iDisplayLength": 100
            });
            $('.paginate_button').hide();
        });

        $(document).ready(function () {
            // Quando o checkbox 'selectAllCheckbox' for alterado
            $("#selectAllCheckbox").change(function () {
                // Marque ou desmarque todos os checkboxes com a classe 'itemCheckbox'
                $(".itemCheckbox").prop('checked', $(this).prop('checked'));
            });
        });

        document.getElementById('selectAllCheckbox').addEventListener('change', function () {
            var checkboxes = document.querySelectorAll('.itemCheckbox');
            checkboxes.forEach(function (checkbox) {
                checkbox.checked = this.checked;
            }.bind(this));
            $("#xmlFile").show();
        });

        function submitForm() {
            var selecteds = [];
            var checkboxes = document.querySelectorAll('.itemCheckbox:checked');

            checkboxes.forEach(function (checkbox) {
                var row = checkbox.closest('tr');
                var id = row.querySelector('td[data-id]').getAttribute('data-id');

                selecteds.push({ id: id });
            });
            $('#devolutionId').val(JSON.stringify(selecteds));


            document.getElementById("uploadForm").submit();
        }


        function DeleteConfirmation(id) {
            Swal.fire({
                title: "Tem certeza que deseja apagar essa devolução?",
                html: '<p>Essa ação não poderá ser revertida</p>',
                showCancelButton: true,
                cancelButtonText: 'Voltar',
                confirmButtonText: 'Apagar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $("#idToDelete").val(id);
                    $("#submitToDelete").click();

                }
            });
        }
    </script>
}