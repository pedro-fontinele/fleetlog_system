@using LOGHouseSystem.Infra.Enums;
@model IEnumerable<LOGHouseSystem.ViewModels.ReceiptNoteDashboardViewModel>

@{
    ViewData["Title"] = "Painel de Recebimento";
}

<style>
    .no-margin {
        margin-left: 0 !important;
        margin-right: 0 !important;
    }
</style>

<div class="row">
    <div class="col-md-5" style="border: 1px solid #CCC;">
        <div class="row" >
            <div class="text-center mb-2" style="border: 1px solid #CCC; border-bottom: 2px solid #000; z-index: 999; ">
                <h4>Aguardando</h4>
            </div>

            <div class="row" style="overflow-y: scroll; height: 75vh;">
                @foreach (var item in Model)
                {
                        if(item.Status == NoteStatus.Aguardando)
                        {
                                @if (item.IsDevolution == YesOrNo.Yes)
                                {
                            <div class="col-xl-6 col-md-6 mb-1 w-100 no-margin">
                                <div class="card bg-danger border-left-primary shadow text-white no-margin">
                                            <div class="card-body w-100 col-md-12">
                                                <div class="row no-gutters align-items-center">
                                                    <div class="col ">
                                                        <div class="text-xs font-weight-bold text-white text-uppercase mb-1 d-flex">
                                                            Nota fiscal
                                                            <a title="Apagar" onclick="deleteConfirmation(@item.Id)">
                                                                <span style="color: white; margin-left: 75px; cursor: pointer" class="fa fa-2x fa-fw fa-trash-can"></span>
                                                            </a>
                                                        </div>
                                                        <div class="h5 mb-0 font-weight-bold">ID: @Html.DisplayFor(modelItem => item.Id)</div>
                                                        <div name="">Número da Nota: @Html.DisplayFor(modelItem => item.InvoiceNumber)</div>
                                                        <div name="cnpj"> @Html.DisplayFor(modelItem => item.Cnpj)</div>
                                                        <div>@Html.DisplayFor(modelItem => item.SocialName)</div>
                                                        <div> Data de Emissão: @Html.DisplayFor(modelItem => item.Date)</div>
                                                        <br />
                                                        <div>
                                                            <a class="float-left" style="color:white" title="Ver mais" href="@Url.Action("ViewItems", "ReceiptNote", new{id = item.Id, routeUrl = $"{Url.Action("Index","ReceiptNoteDashboard")}"})"><i class="fa fa-fw fa-eye"></i> Ver mais</a>
                                                        </div>
                                                        <br />
                                                        <br />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                            <div class="col-xl-6 col-md-6 mb-1 w-100 no-margin">
                                    <div class="card border-left-primary shadow no-margin">
                                            <div class="card-body w-100 col-md-12">
                                                <div class="row no-gutters align-items-center">
                                                    <div class="col ">
                                                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1 d-flex">
                                                            Nota fiscal

                                                            <a title="Apagar" onclick="deleteConfirmation(@item.Id)"><span style="color: red; margin-left: 75px; cursor: pointer" class="fa fa-2x fa-fw fa-trash-can"></span></a>
                                                        </div>
                                                        <div class="h5 mb-0 font-weight-bold text-gray-800">ID: @Html.DisplayFor(modelItem => item.Id)</div>
                                                        <div name="" class="text-gray-800">Número da Nota: @Html.DisplayFor(modelItem => item.InvoiceNumber)</div>
                                                        <div name="cnpj" class="text-gray-800"> @Html.DisplayFor(modelItem => item.Cnpj)</div>
                                                        <div class="text-gray-800">@Html.DisplayFor(modelItem => item.SocialName)</div>
                                                        <div class="text-gray-800"> Data de Emissão: @Html.DisplayFor(modelItem => item.Date)</div>
                                                        <br />
                                                        <div class="text-gray-800">
                                                            <a class="float-left" title="Ver mais" href="@Url.Action("ViewItems", "ReceiptNote", new{id = item.Id, routeUrl = $"{Url.Action("Index","ReceiptNoteDashboard")}"})"><i class=" fa fa-fw fa-eye"></i> Ver mais</a>
                                                        </div>
                                                        <br />
                                                        <br />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                        }
                }
            </div>
        
        </div>
    </div>

    <div class="col-md-7" style="border: 1px solid #CCC; ">
        <div class="row" >
            <div class="text-center mb-2" style="border: 1px solid #CCC; border-bottom: 2px solid #000; z-index: 999;">
                <h4>Em Andamento</h4>
            </div>
            <div class="row" style="overflow-y: scroll; height: 75vh;">
                @foreach (var item in Model)
                {
                        
                    if (item.Status == NoteStatus.EmAndamento)
                    {
                        @if (item.IsDevolution == YesOrNo.Yes)
                        {
                            <div class="col-xl-6 col-md-6 mb-6">
                                <div class="card bg-danger text-white border-left-primary shadow py-2">
                                    <div class="card-body text-white">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div  class="text-xs  text-white text-uppercase mb-1">
                                                    Nota fiscal
                                                </div>
                                                <div class="h5 mb-0 font-weight-bold ">ID: @Html.DisplayFor(modelItem => item.Id)</div>
                                                <div class="">Número da Nota: @Html.DisplayFor(modelItem => item.InvoiceNumber)</div>
                                                <div name="cnpj" class="">@Html.DisplayFor(modelItem => item.Cnpj)</div>
                                                <div class="">@Html.DisplayFor(modelItem => item.SocialName)</div>
                                                <div class="">Data de Emissão: @Html.DisplayFor(modelItem => item.Date)</div>
                                                Chave de acesso: <div class="">@Html.DisplayFor(modelItem => item.AccessKey)</div>
                                                <br />
                                                <div class=""><a style="color: white" class="float-left" title="Ver mais" href="@Url.Action("ViewItems", "ReceiptNote", new{id = item.Id, routeUrl = $"{Url.Action("Index","ReceiptNoteDashboard")}"})"><i class=" fa fa-fw fa-eye"></i> Ver mais</a></div>
                                                <br />
                                                <br />
                                                <h4 class="small font-weight-bold">@Html.Encode(EnumHelper.GetDescription<NoteStatus>(item.Status)) <span class="float-right">@Html.DisplayFor(modelItem => item.ConcludedPercent) %</span></h4>
                                                <div class="progress">
                                                    @if (item.Status == NoteStatus.NotaOk)
                                                    {
                                                        <div class="progress-bar bg-success" role="progressbar" style="width: @Html.DisplayFor(modelItem => item.ConcludedPercent)%" aria-valuenow="@Html.DisplayFor(modelItem => item.ConcludedPercent)" aria-valuemin="0" aria-valuemax="100"></div>
                                                    }
                                                    else if (item.Status == NoteStatus.NotaDivergente)
                                                    {
                                                        <div class="progress-bar bg-danger" role="progressbar" style="width: @Html.DisplayFor(modelItem => item.ConcludedPercent)%" aria-valuenow="@Html.DisplayFor(modelItem => item.ConcludedPercent)" aria-valuemin="0" aria-valuemax="100"></div>
                                                    }
                                                    else
                                                    {
                                                        <div class="progress-bar bg-warning" role="progressbar" style="width: @Html.DisplayFor(modelItem => item.ConcludedPercent)%" aria-valuenow="@Html.DisplayFor(modelItem => item.ConcludedPercent)" aria-valuemin="0" aria-valuemax="100"></div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-footer">
                                        <a class="btn btn-secondary" type="button" onclick="ResetConfirmation(@item.Id)">
                                            <i class="fas fa-undo"></i>
                                        </a>
                                        <div class="float-right">
                                            @if (item.Status == NoteStatus.NotaOk || item.Status == NoteStatus.NotaDivergente || item.ConcludedPercent >= 80)
                                            {
                                                <a class="btn btn-success" type="button" onclick="ConcludeConfirmation(@item.Id)">
                                                    <i class="fas fa-check"></i> Confirmar
                                                </a>
                                                <a class="btn btn-danger" type="button" onclick="RejectConfirmation(@item.Id)">
                                                    <i class="fas fa-close"></i> Rejeitar
                                                </a>
                                            }
                                            else
                                            {
                                                <a class="btn btn-success disabled" type="button" onclick="ConcludeConfirmation(@item.Id)">
                                                    <i class="fas fa-check"></i> Confirmar
                                                </a>
                                                <a class="btn btn-danger disabled" type="button" onclick="RejectConfirmation(@item.Id)">
                                                    <i class="fas fa-close"></i> Rejeitar
                                                </a>
                                            }

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-xl-6 col-md-6 mb-6">
                                <div class="card border-left-primary shadow py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                                    Nota fiscal
                                                </div>
                                                <div class="h5 mb-0 font-weight-bold text-gray-800">ID: @Html.DisplayFor(modelItem => item.Id)</div>
                                                <div class="text-gray-800">Número da Nota: @Html.DisplayFor(modelItem => item.InvoiceNumber)</div>
                                                <div name="cnpj" class="text-gray-800">@Html.DisplayFor(modelItem => item.Cnpj)</div>
                                                <div class="text-gray-800">@Html.DisplayFor(modelItem => item.SocialName)</div>
                                                <div class="text-gray-800">Data de Emissão: @Html.DisplayFor(modelItem => item.Date)</div>
                                                Chave de acesso: <div class="text-gray-800">@Html.DisplayFor(modelItem => item.AccessKey)</div>
                                                <br />
                                                <div class="text-gray-800"><a class="float-left" title="Ver mais" href="@Url.Action("ViewItems", "ReceiptNote", new{id = item.Id, routeUrl = $"{Url.Action("Index","ReceiptNoteDashboard")}"})"><i class=" fa fa-fw fa-eye"></i> Ver mais</a></div>
                                                <br />
                                                <br />
                                                <h4 class="small font-weight-bold">@Html.Encode(EnumHelper.GetDescription<NoteStatus>(item.Status)) <span class="float-right">@Html.DisplayFor(modelItem => item.ConcludedPercent) %</span></h4>
                                                <div class="progress">
                                                    @if (item.Status == NoteStatus.NotaOk)
                                                    {
                                                        <div class="progress-bar bg-success" role="progressbar" style="width: @Html.DisplayFor(modelItem => item.ConcludedPercent)%" aria-valuenow="@Html.DisplayFor(modelItem => item.ConcludedPercent)" aria-valuemin="0" aria-valuemax="100"></div>
                                                    }
                                                    else if (item.Status == NoteStatus.NotaDivergente)
                                                    {
                                                        <div class="progress-bar bg-danger" role="progressbar" style="width: @Html.DisplayFor(modelItem => item.ConcludedPercent)%" aria-valuenow="@Html.DisplayFor(modelItem => item.ConcludedPercent)" aria-valuemin="0" aria-valuemax="100"></div>
                                                    }
                                                    else
                                                    {
                                                        <div class="progress-bar bg-warning" role="progressbar" style="width: @Html.DisplayFor(modelItem => item.ConcludedPercent)%" aria-valuenow="@Html.DisplayFor(modelItem => item.ConcludedPercent)" aria-valuemin="0" aria-valuemax="100"></div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-footer">
                                        <a class="btn btn-secondary" type="button" onclick="ResetConfirmation(@item.Id)">
                                            <i class="fas fa-undo"></i>
                                        </a>
                                        <div class="float-right">
                                            @if (item.Status == NoteStatus.NotaOk || item.Status == NoteStatus.NotaDivergente || item.ConcludedPercent >= 80)
                                            {
                                                <a class="btn btn-success" type="button" onclick="ConcludeConfirmation(@item.Id)">
                                                    <i class="fas fa-check"></i> Confirmar
                                                </a>
                                                <a class="btn btn-danger" type="button" onclick="RejectConfirmation(@item.Id)">
                                                    <i class="fas fa-close"></i> Rejeitar
                                                </a>
                                            }
                                            else
                                            {
                                                <a class="btn btn-success disabled" type="button" onclick="ConcludeConfirmation(@item.Id)">
                                                    <i class="fas fa-check"></i> Confirmar
                                                </a>
                                                <a class="btn btn-danger" type="button" onclick="RejectConfirmation(@item.Id)">
                                                    <i class="fas fa-close"></i> Rejeitar
                                                </a>
                                            }

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }



                            
                    }

                }
                
        </div>
       
        </div>
    </div>
</div>

@section Scripts {

    <script src="~/lib/jQuery-Mask-Plugin-master/src/jquery.mask.js"></script>
         
    <script>

        function deleteConfirmation(id) {
                 Swal.fire({
                     title: 'Tem certeza que quer apagar essa nota fiscal?',
                     text: "Você não poderá desfazer essa ação!",
                     icon: 'warning',
                     showCancelButton: true,
                     confirmButtonColor: '#3085d6',
                     cancelButtonColor: '#d33',
                     cancelButtonText: 'Cancelar',
                     confirmButtonText: 'Apagar'

                 }).then((result) => {
                     if (result.isConfirmed) {
                    let url = `@Url.Action("Delete", "ReceiptNoteDashboard")?id=${id}`;
                         window.location.href = url;
                     }
                 })
                 }
             

        $(document).ready(function () {
            $('[name=cnpj]').mask('00.000.000/0000-00', { reverse: true });
            });

        //WebSocket message
        let socket = new WebSocket("wss://socket.loghouse.com.br");

        //$(document).ready(function () {
            
        //    socket.onmessage = function (message) {
        //        let url = `@Url.Action("Index", "ReceiptNoteDashboard")`;
        //            window.location.href = url;
        //    }
        //})

        //ResetConfirmation
        function ResetConfirmation(idItem) {
            Swal.fire({
                title: 'Tem certeza que deseja resetar esse Dashboard?',
                text: "Você não poderá desfazer essa ação!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Resetar'

            }).then((result) => {
                if (result.isConfirmed) {

                    let url = `@Url.Action("Reset", "ReceiptNoteDashboard")?id=${idItem}`;
                    window.location.href = url;
                }
            })
        }


        //ConcludeConfirmation
        function ConcludeConfirmation(idItem) {
            Swal.fire({
                title: 'Tem certeza que deseja concluir esse Dashboard? O depositante receberá um e-mail informando sobre a mercadoria disponível.',
                text: "Você não poderá desfazer essa ação!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Concluir'

            }).then((result) => {
                if (result.isConfirmed) {

                    let timerInterval;
                    Swal.fire({
                        title: "Carregando...",
                        html: "Dependendo da quantidade de produtos, essa ação pode demorar um pouco...",
                        timer: 20000,
                        timerProgressBar: true,
                        didOpen: () => {
                            Swal.showLoading();
                            const timer = Swal.getPopup().querySelector("b");
                            timerInterval = setInterval(() => {
                                timer.textContent = `${Swal.getTimerLeft()}`;
                            }, 100);
                        },
                        willClose: () => {
                            clearInterval(timerInterval);
                        }
                    }).then((result) => {
                        /* Read more about handling dismissals below */
                        if (result.dismiss === Swal.DismissReason.timer) {
                            console.log("I was closed by the timer");
                        }
                    });

                    let url = `@Url.Action("Confirm", "ReceiptNoteDashboard")?id=${idItem}`;
                    window.location.href = url;
                }
            })
        }

        //RejectConfirmation
        function RejectConfirmation(idItem) {
            Swal.fire({
                title: "Tem certeza que deseja cancelar esse recebimento?",
                input: 'textarea',
                html: '<p>Será enviado um Email ao cliente, por favor, digite o motivo da recusa abaixo:</p>',
                inputPlaceholder: 'Escreva o motivo da recusa aqui...',
                inputAttributes: {
                    'aria-label': 'Escreva sua mensagem aqui.'
                },
                showCancelButton: true,
                cancelButtonText: 'Voltar',
                confirmButtonText: 'Enviar'
            }).then((result) => {
                if (result.value) {
                    const text = result.value; // Obtenha o valor do campo de texto
                    var subject = "Nota de Recebimento Rejeitada"
                    var route = 0;
                    let url = `@Url.Action("Reject", "ReceiptNoteDashboard")?id=${idItem}&subject=${subject}&route=${route}&message=${text}`;
                    window.location.href = url;
                }
            });
        }
    </script>


}